name: Build Executables

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    
    env:
      MAIN_PY_FILE: 'ScreenText.py'  # Define the path to your main.py file here

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.x

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
      working-directory: ./
    
    - name: Install pywin32 only for Windows
      if: matrix.os == 'windows-latest'
      run: |
        pip install pywin32==306 py2exe==0.13.0.0

    - name: Install PyInstaller
      run: |
        pip install pyinstaller
      working-directory: ./

    - name: Build executable
      run: |
        python ${{ env.MAIN_PY_FILE }}
      working-directory: ./

    - name: List files in dist folder
      run: ls -R ./dist/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ScreenText_Token }}
      with:
        tag_name: v1.0.15
        release_name: Release v1.0.15
        draft: false
        prerelease: false

    - name: Upload Release Asset Windows
      if: matrix.os == 'windows-latest'
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ScreenText_Token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: D:\a\ScreenText\ScreenText\dist\ScreenText.exe
        asset_name: ScreenText.exe
        asset_content_type: application/octet-stream
    
    - name: Upload Release Asset Linux
      if: matrix.os == 'ubuntu-latest'
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ScreenText_Token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ScreenText
        asset_name: ScreenText
        asset_content_type: application/octet-stream
    
    - name: Upload Release Asset MacOS
      if: matrix.os == 'macos-latest'
      id: upload-release-asset-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ScreenText_Token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ScreenText
        asset_name: ScreenText
        asset_content_type: application/octet-stream